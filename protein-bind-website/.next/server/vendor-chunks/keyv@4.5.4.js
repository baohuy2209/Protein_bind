"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/keyv@4.5.4";
exports.ids = ["vendor-chunks/keyv@4.5.4"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/keyv@4.5.4/node_modules/keyv/src/index.js":
/*!**********************************************************************!*\
  !*** ./node_modules/.pnpm/keyv@4.5.4/node_modules/keyv/src/index.js ***!
  \**********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nconst EventEmitter = __webpack_require__(/*! events */ \"events\");\nconst JSONB = __webpack_require__(/*! json-buffer */ \"(ssr)/./node_modules/.pnpm/json-buffer@3.0.1/node_modules/json-buffer/index.js\");\n\nconst loadStore = options => {\n\tconst adapters = {\n\t\tredis: '@keyv/redis',\n\t\trediss: '@keyv/redis',\n\t\tmongodb: '@keyv/mongo',\n\t\tmongo: '@keyv/mongo',\n\t\tsqlite: '@keyv/sqlite',\n\t\tpostgresql: '@keyv/postgres',\n\t\tpostgres: '@keyv/postgres',\n\t\tmysql: '@keyv/mysql',\n\t\tetcd: '@keyv/etcd',\n\t\toffline: '@keyv/offline',\n\t\ttiered: '@keyv/tiered',\n\t};\n\tif (options.adapter || options.uri) {\n\t\tconst adapter = options.adapter || /^[^:+]*/.exec(options.uri)[0];\n\t\treturn new (__webpack_require__(\"(ssr)/./node_modules/.pnpm/keyv@4.5.4/node_modules/keyv/src sync recursive\")(adapters[adapter]))(options);\n\t}\n\n\treturn new Map();\n};\n\nconst iterableAdapters = [\n\t'sqlite',\n\t'postgres',\n\t'mysql',\n\t'mongo',\n\t'redis',\n\t'tiered',\n];\n\nclass Keyv extends EventEmitter {\n\tconstructor(uri, {emitErrors = true, ...options} = {}) {\n\t\tsuper();\n\t\tthis.opts = {\n\t\t\tnamespace: 'keyv',\n\t\t\tserialize: JSONB.stringify,\n\t\t\tdeserialize: JSONB.parse,\n\t\t\t...((typeof uri === 'string') ? {uri} : uri),\n\t\t\t...options,\n\t\t};\n\n\t\tif (!this.opts.store) {\n\t\t\tconst adapterOptions = {...this.opts};\n\t\t\tthis.opts.store = loadStore(adapterOptions);\n\t\t}\n\n\t\tif (this.opts.compression) {\n\t\t\tconst compression = this.opts.compression;\n\t\t\tthis.opts.serialize = compression.serialize.bind(compression);\n\t\t\tthis.opts.deserialize = compression.deserialize.bind(compression);\n\t\t}\n\n\t\tif (typeof this.opts.store.on === 'function' && emitErrors) {\n\t\t\tthis.opts.store.on('error', error => this.emit('error', error));\n\t\t}\n\n\t\tthis.opts.store.namespace = this.opts.namespace;\n\n\t\tconst generateIterator = iterator => async function * () {\n\t\t\tfor await (const [key, raw] of typeof iterator === 'function'\n\t\t\t\t? iterator(this.opts.store.namespace)\n\t\t\t\t: iterator) {\n\t\t\t\tconst data = await this.opts.deserialize(raw);\n\t\t\t\tif (this.opts.store.namespace && !key.includes(this.opts.store.namespace)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (typeof data.expires === 'number' && Date.now() > data.expires) {\n\t\t\t\t\tthis.delete(key);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tyield [this._getKeyUnprefix(key), data.value];\n\t\t\t}\n\t\t};\n\n\t\t// Attach iterators\n\t\tif (typeof this.opts.store[Symbol.iterator] === 'function' && this.opts.store instanceof Map) {\n\t\t\tthis.iterator = generateIterator(this.opts.store);\n\t\t} else if (typeof this.opts.store.iterator === 'function' && this.opts.store.opts\n\t\t\t&& this._checkIterableAdaptar()) {\n\t\t\tthis.iterator = generateIterator(this.opts.store.iterator.bind(this.opts.store));\n\t\t}\n\t}\n\n\t_checkIterableAdaptar() {\n\t\treturn iterableAdapters.includes(this.opts.store.opts.dialect)\n\t\t\t|| iterableAdapters.findIndex(element => this.opts.store.opts.url.includes(element)) >= 0;\n\t}\n\n\t_getKeyPrefix(key) {\n\t\treturn `${this.opts.namespace}:${key}`;\n\t}\n\n\t_getKeyPrefixArray(keys) {\n\t\treturn keys.map(key => `${this.opts.namespace}:${key}`);\n\t}\n\n\t_getKeyUnprefix(key) {\n\t\treturn key\n\t\t\t.split(':')\n\t\t\t.splice(1)\n\t\t\t.join(':');\n\t}\n\n\tget(key, options) {\n\t\tconst {store} = this.opts;\n\t\tconst isArray = Array.isArray(key);\n\t\tconst keyPrefixed = isArray ? this._getKeyPrefixArray(key) : this._getKeyPrefix(key);\n\t\tif (isArray && store.getMany === undefined) {\n\t\t\tconst promises = [];\n\t\t\tfor (const key of keyPrefixed) {\n\t\t\t\tpromises.push(Promise.resolve()\n\t\t\t\t\t.then(() => store.get(key))\n\t\t\t\t\t.then(data => (typeof data === 'string') ? this.opts.deserialize(data) : (this.opts.compression ? this.opts.deserialize(data) : data))\n\t\t\t\t\t.then(data => {\n\t\t\t\t\t\tif (data === undefined || data === null) {\n\t\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (typeof data.expires === 'number' && Date.now() > data.expires) {\n\t\t\t\t\t\t\treturn this.delete(key).then(() => undefined);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn (options && options.raw) ? data : data.value;\n\t\t\t\t\t}),\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn Promise.allSettled(promises)\n\t\t\t\t.then(values => {\n\t\t\t\t\tconst data = [];\n\t\t\t\t\tfor (const value of values) {\n\t\t\t\t\t\tdata.push(value.value);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn data;\n\t\t\t\t});\n\t\t}\n\n\t\treturn Promise.resolve()\n\t\t\t.then(() => isArray ? store.getMany(keyPrefixed) : store.get(keyPrefixed))\n\t\t\t.then(data => (typeof data === 'string') ? this.opts.deserialize(data) : (this.opts.compression ? this.opts.deserialize(data) : data))\n\t\t\t.then(data => {\n\t\t\t\tif (data === undefined || data === null) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\n\t\t\t\tif (isArray) {\n\t\t\t\t\treturn data.map((row, index) => {\n\t\t\t\t\t\tif ((typeof row === 'string')) {\n\t\t\t\t\t\t\trow = this.opts.deserialize(row);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (row === undefined || row === null) {\n\t\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (typeof row.expires === 'number' && Date.now() > row.expires) {\n\t\t\t\t\t\t\tthis.delete(key[index]).then(() => undefined);\n\t\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn (options && options.raw) ? row : row.value;\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif (typeof data.expires === 'number' && Date.now() > data.expires) {\n\t\t\t\t\treturn this.delete(key).then(() => undefined);\n\t\t\t\t}\n\n\t\t\t\treturn (options && options.raw) ? data : data.value;\n\t\t\t});\n\t}\n\n\tset(key, value, ttl) {\n\t\tconst keyPrefixed = this._getKeyPrefix(key);\n\t\tif (typeof ttl === 'undefined') {\n\t\t\tttl = this.opts.ttl;\n\t\t}\n\n\t\tif (ttl === 0) {\n\t\t\tttl = undefined;\n\t\t}\n\n\t\tconst {store} = this.opts;\n\n\t\treturn Promise.resolve()\n\t\t\t.then(() => {\n\t\t\t\tconst expires = (typeof ttl === 'number') ? (Date.now() + ttl) : null;\n\t\t\t\tif (typeof value === 'symbol') {\n\t\t\t\t\tthis.emit('error', 'symbol cannot be serialized');\n\t\t\t\t}\n\n\t\t\t\tvalue = {value, expires};\n\t\t\t\treturn this.opts.serialize(value);\n\t\t\t})\n\t\t\t.then(value => store.set(keyPrefixed, value, ttl))\n\t\t\t.then(() => true);\n\t}\n\n\tdelete(key) {\n\t\tconst {store} = this.opts;\n\t\tif (Array.isArray(key)) {\n\t\t\tconst keyPrefixed = this._getKeyPrefixArray(key);\n\t\t\tif (store.deleteMany === undefined) {\n\t\t\t\tconst promises = [];\n\t\t\t\tfor (const key of keyPrefixed) {\n\t\t\t\t\tpromises.push(store.delete(key));\n\t\t\t\t}\n\n\t\t\t\treturn Promise.allSettled(promises)\n\t\t\t\t\t.then(values => values.every(x => x.value === true));\n\t\t\t}\n\n\t\t\treturn Promise.resolve()\n\t\t\t\t.then(() => store.deleteMany(keyPrefixed));\n\t\t}\n\n\t\tconst keyPrefixed = this._getKeyPrefix(key);\n\t\treturn Promise.resolve()\n\t\t\t.then(() => store.delete(keyPrefixed));\n\t}\n\n\tclear() {\n\t\tconst {store} = this.opts;\n\t\treturn Promise.resolve()\n\t\t\t.then(() => store.clear());\n\t}\n\n\thas(key) {\n\t\tconst keyPrefixed = this._getKeyPrefix(key);\n\t\tconst {store} = this.opts;\n\t\treturn Promise.resolve()\n\t\t\t.then(async () => {\n\t\t\t\tif (typeof store.has === 'function') {\n\t\t\t\t\treturn store.has(keyPrefixed);\n\t\t\t\t}\n\n\t\t\t\tconst value = await store.get(keyPrefixed);\n\t\t\t\treturn value !== undefined;\n\t\t\t});\n\t}\n\n\tdisconnect() {\n\t\tconst {store} = this.opts;\n\t\tif (typeof store.disconnect === 'function') {\n\t\t\treturn store.disconnect();\n\t\t}\n\t}\n}\n\nmodule.exports = Keyv;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0va2V5dkA0LjUuNC9ub2RlX21vZHVsZXMva2V5di9zcmMvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIscUJBQXFCLG1CQUFPLENBQUMsc0JBQVE7QUFDckMsY0FBYyxtQkFBTyxDQUFDLG1HQUFhOztBQUVuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsa0dBQVEsaUJBQWlCLENBQUM7QUFDeEM7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsbUJBQW1CLCtCQUErQixJQUFJO0FBQ3REO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQ0FBb0MsS0FBSztBQUN6QztBQUNBOztBQUVBO0FBQ0EsMkJBQTJCO0FBQzNCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsWUFBWSxvQkFBb0IsR0FBRyxJQUFJO0FBQ3ZDOztBQUVBO0FBQ0EsNEJBQTRCLG9CQUFvQixHQUFHLElBQUk7QUFDdkQ7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsU0FBUyxPQUFPO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxNQUFNO0FBQ047QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxLQUFLO0FBQ0w7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxNQUFNO0FBQ047O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0EsSUFBSTtBQUNKOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBLFNBQVMsT0FBTzs7QUFFaEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGFBQWE7QUFDYjtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxTQUFTLE9BQU87QUFDaEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFNBQVMsT0FBTztBQUNoQjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLFNBQVMsT0FBTztBQUNoQjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7O0FBRUE7QUFDQSxTQUFTLE9BQU87QUFDaEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL3Byb3RlaW4tYmluZC13ZWJzaXRlLy4vbm9kZV9tb2R1bGVzLy5wbnBtL2tleXZANC41LjQvbm9kZV9tb2R1bGVzL2tleXYvc3JjL2luZGV4LmpzPzI2MGMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBFdmVudEVtaXR0ZXIgPSByZXF1aXJlKCdldmVudHMnKTtcbmNvbnN0IEpTT05CID0gcmVxdWlyZSgnanNvbi1idWZmZXInKTtcblxuY29uc3QgbG9hZFN0b3JlID0gb3B0aW9ucyA9PiB7XG5cdGNvbnN0IGFkYXB0ZXJzID0ge1xuXHRcdHJlZGlzOiAnQGtleXYvcmVkaXMnLFxuXHRcdHJlZGlzczogJ0BrZXl2L3JlZGlzJyxcblx0XHRtb25nb2RiOiAnQGtleXYvbW9uZ28nLFxuXHRcdG1vbmdvOiAnQGtleXYvbW9uZ28nLFxuXHRcdHNxbGl0ZTogJ0BrZXl2L3NxbGl0ZScsXG5cdFx0cG9zdGdyZXNxbDogJ0BrZXl2L3Bvc3RncmVzJyxcblx0XHRwb3N0Z3JlczogJ0BrZXl2L3Bvc3RncmVzJyxcblx0XHRteXNxbDogJ0BrZXl2L215c3FsJyxcblx0XHRldGNkOiAnQGtleXYvZXRjZCcsXG5cdFx0b2ZmbGluZTogJ0BrZXl2L29mZmxpbmUnLFxuXHRcdHRpZXJlZDogJ0BrZXl2L3RpZXJlZCcsXG5cdH07XG5cdGlmIChvcHRpb25zLmFkYXB0ZXIgfHwgb3B0aW9ucy51cmkpIHtcblx0XHRjb25zdCBhZGFwdGVyID0gb3B0aW9ucy5hZGFwdGVyIHx8IC9eW146K10qLy5leGVjKG9wdGlvbnMudXJpKVswXTtcblx0XHRyZXR1cm4gbmV3IChyZXF1aXJlKGFkYXB0ZXJzW2FkYXB0ZXJdKSkob3B0aW9ucyk7XG5cdH1cblxuXHRyZXR1cm4gbmV3IE1hcCgpO1xufTtcblxuY29uc3QgaXRlcmFibGVBZGFwdGVycyA9IFtcblx0J3NxbGl0ZScsXG5cdCdwb3N0Z3JlcycsXG5cdCdteXNxbCcsXG5cdCdtb25nbycsXG5cdCdyZWRpcycsXG5cdCd0aWVyZWQnLFxuXTtcblxuY2xhc3MgS2V5diBleHRlbmRzIEV2ZW50RW1pdHRlciB7XG5cdGNvbnN0cnVjdG9yKHVyaSwge2VtaXRFcnJvcnMgPSB0cnVlLCAuLi5vcHRpb25zfSA9IHt9KSB7XG5cdFx0c3VwZXIoKTtcblx0XHR0aGlzLm9wdHMgPSB7XG5cdFx0XHRuYW1lc3BhY2U6ICdrZXl2Jyxcblx0XHRcdHNlcmlhbGl6ZTogSlNPTkIuc3RyaW5naWZ5LFxuXHRcdFx0ZGVzZXJpYWxpemU6IEpTT05CLnBhcnNlLFxuXHRcdFx0Li4uKCh0eXBlb2YgdXJpID09PSAnc3RyaW5nJykgPyB7dXJpfSA6IHVyaSksXG5cdFx0XHQuLi5vcHRpb25zLFxuXHRcdH07XG5cblx0XHRpZiAoIXRoaXMub3B0cy5zdG9yZSkge1xuXHRcdFx0Y29uc3QgYWRhcHRlck9wdGlvbnMgPSB7Li4udGhpcy5vcHRzfTtcblx0XHRcdHRoaXMub3B0cy5zdG9yZSA9IGxvYWRTdG9yZShhZGFwdGVyT3B0aW9ucyk7XG5cdFx0fVxuXG5cdFx0aWYgKHRoaXMub3B0cy5jb21wcmVzc2lvbikge1xuXHRcdFx0Y29uc3QgY29tcHJlc3Npb24gPSB0aGlzLm9wdHMuY29tcHJlc3Npb247XG5cdFx0XHR0aGlzLm9wdHMuc2VyaWFsaXplID0gY29tcHJlc3Npb24uc2VyaWFsaXplLmJpbmQoY29tcHJlc3Npb24pO1xuXHRcdFx0dGhpcy5vcHRzLmRlc2VyaWFsaXplID0gY29tcHJlc3Npb24uZGVzZXJpYWxpemUuYmluZChjb21wcmVzc2lvbik7XG5cdFx0fVxuXG5cdFx0aWYgKHR5cGVvZiB0aGlzLm9wdHMuc3RvcmUub24gPT09ICdmdW5jdGlvbicgJiYgZW1pdEVycm9ycykge1xuXHRcdFx0dGhpcy5vcHRzLnN0b3JlLm9uKCdlcnJvcicsIGVycm9yID0+IHRoaXMuZW1pdCgnZXJyb3InLCBlcnJvcikpO1xuXHRcdH1cblxuXHRcdHRoaXMub3B0cy5zdG9yZS5uYW1lc3BhY2UgPSB0aGlzLm9wdHMubmFtZXNwYWNlO1xuXG5cdFx0Y29uc3QgZ2VuZXJhdGVJdGVyYXRvciA9IGl0ZXJhdG9yID0+IGFzeW5jIGZ1bmN0aW9uICogKCkge1xuXHRcdFx0Zm9yIGF3YWl0IChjb25zdCBba2V5LCByYXddIG9mIHR5cGVvZiBpdGVyYXRvciA9PT0gJ2Z1bmN0aW9uJ1xuXHRcdFx0XHQ/IGl0ZXJhdG9yKHRoaXMub3B0cy5zdG9yZS5uYW1lc3BhY2UpXG5cdFx0XHRcdDogaXRlcmF0b3IpIHtcblx0XHRcdFx0Y29uc3QgZGF0YSA9IGF3YWl0IHRoaXMub3B0cy5kZXNlcmlhbGl6ZShyYXcpO1xuXHRcdFx0XHRpZiAodGhpcy5vcHRzLnN0b3JlLm5hbWVzcGFjZSAmJiAha2V5LmluY2x1ZGVzKHRoaXMub3B0cy5zdG9yZS5uYW1lc3BhY2UpKSB7XG5cdFx0XHRcdFx0Y29udGludWU7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRpZiAodHlwZW9mIGRhdGEuZXhwaXJlcyA9PT0gJ251bWJlcicgJiYgRGF0ZS5ub3coKSA+IGRhdGEuZXhwaXJlcykge1xuXHRcdFx0XHRcdHRoaXMuZGVsZXRlKGtleSk7XG5cdFx0XHRcdFx0Y29udGludWU7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHR5aWVsZCBbdGhpcy5fZ2V0S2V5VW5wcmVmaXgoa2V5KSwgZGF0YS52YWx1ZV07XG5cdFx0XHR9XG5cdFx0fTtcblxuXHRcdC8vIEF0dGFjaCBpdGVyYXRvcnNcblx0XHRpZiAodHlwZW9mIHRoaXMub3B0cy5zdG9yZVtTeW1ib2wuaXRlcmF0b3JdID09PSAnZnVuY3Rpb24nICYmIHRoaXMub3B0cy5zdG9yZSBpbnN0YW5jZW9mIE1hcCkge1xuXHRcdFx0dGhpcy5pdGVyYXRvciA9IGdlbmVyYXRlSXRlcmF0b3IodGhpcy5vcHRzLnN0b3JlKTtcblx0XHR9IGVsc2UgaWYgKHR5cGVvZiB0aGlzLm9wdHMuc3RvcmUuaXRlcmF0b3IgPT09ICdmdW5jdGlvbicgJiYgdGhpcy5vcHRzLnN0b3JlLm9wdHNcblx0XHRcdCYmIHRoaXMuX2NoZWNrSXRlcmFibGVBZGFwdGFyKCkpIHtcblx0XHRcdHRoaXMuaXRlcmF0b3IgPSBnZW5lcmF0ZUl0ZXJhdG9yKHRoaXMub3B0cy5zdG9yZS5pdGVyYXRvci5iaW5kKHRoaXMub3B0cy5zdG9yZSkpO1xuXHRcdH1cblx0fVxuXG5cdF9jaGVja0l0ZXJhYmxlQWRhcHRhcigpIHtcblx0XHRyZXR1cm4gaXRlcmFibGVBZGFwdGVycy5pbmNsdWRlcyh0aGlzLm9wdHMuc3RvcmUub3B0cy5kaWFsZWN0KVxuXHRcdFx0fHwgaXRlcmFibGVBZGFwdGVycy5maW5kSW5kZXgoZWxlbWVudCA9PiB0aGlzLm9wdHMuc3RvcmUub3B0cy51cmwuaW5jbHVkZXMoZWxlbWVudCkpID49IDA7XG5cdH1cblxuXHRfZ2V0S2V5UHJlZml4KGtleSkge1xuXHRcdHJldHVybiBgJHt0aGlzLm9wdHMubmFtZXNwYWNlfToke2tleX1gO1xuXHR9XG5cblx0X2dldEtleVByZWZpeEFycmF5KGtleXMpIHtcblx0XHRyZXR1cm4ga2V5cy5tYXAoa2V5ID0+IGAke3RoaXMub3B0cy5uYW1lc3BhY2V9OiR7a2V5fWApO1xuXHR9XG5cblx0X2dldEtleVVucHJlZml4KGtleSkge1xuXHRcdHJldHVybiBrZXlcblx0XHRcdC5zcGxpdCgnOicpXG5cdFx0XHQuc3BsaWNlKDEpXG5cdFx0XHQuam9pbignOicpO1xuXHR9XG5cblx0Z2V0KGtleSwgb3B0aW9ucykge1xuXHRcdGNvbnN0IHtzdG9yZX0gPSB0aGlzLm9wdHM7XG5cdFx0Y29uc3QgaXNBcnJheSA9IEFycmF5LmlzQXJyYXkoa2V5KTtcblx0XHRjb25zdCBrZXlQcmVmaXhlZCA9IGlzQXJyYXkgPyB0aGlzLl9nZXRLZXlQcmVmaXhBcnJheShrZXkpIDogdGhpcy5fZ2V0S2V5UHJlZml4KGtleSk7XG5cdFx0aWYgKGlzQXJyYXkgJiYgc3RvcmUuZ2V0TWFueSA9PT0gdW5kZWZpbmVkKSB7XG5cdFx0XHRjb25zdCBwcm9taXNlcyA9IFtdO1xuXHRcdFx0Zm9yIChjb25zdCBrZXkgb2Yga2V5UHJlZml4ZWQpIHtcblx0XHRcdFx0cHJvbWlzZXMucHVzaChQcm9taXNlLnJlc29sdmUoKVxuXHRcdFx0XHRcdC50aGVuKCgpID0+IHN0b3JlLmdldChrZXkpKVxuXHRcdFx0XHRcdC50aGVuKGRhdGEgPT4gKHR5cGVvZiBkYXRhID09PSAnc3RyaW5nJykgPyB0aGlzLm9wdHMuZGVzZXJpYWxpemUoZGF0YSkgOiAodGhpcy5vcHRzLmNvbXByZXNzaW9uID8gdGhpcy5vcHRzLmRlc2VyaWFsaXplKGRhdGEpIDogZGF0YSkpXG5cdFx0XHRcdFx0LnRoZW4oZGF0YSA9PiB7XG5cdFx0XHRcdFx0XHRpZiAoZGF0YSA9PT0gdW5kZWZpbmVkIHx8IGRhdGEgPT09IG51bGwpIHtcblx0XHRcdFx0XHRcdFx0cmV0dXJuIHVuZGVmaW5lZDtcblx0XHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdFx0aWYgKHR5cGVvZiBkYXRhLmV4cGlyZXMgPT09ICdudW1iZXInICYmIERhdGUubm93KCkgPiBkYXRhLmV4cGlyZXMpIHtcblx0XHRcdFx0XHRcdFx0cmV0dXJuIHRoaXMuZGVsZXRlKGtleSkudGhlbigoKSA9PiB1bmRlZmluZWQpO1xuXHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0XHRyZXR1cm4gKG9wdGlvbnMgJiYgb3B0aW9ucy5yYXcpID8gZGF0YSA6IGRhdGEudmFsdWU7XG5cdFx0XHRcdFx0fSksXG5cdFx0XHRcdCk7XG5cdFx0XHR9XG5cblx0XHRcdHJldHVybiBQcm9taXNlLmFsbFNldHRsZWQocHJvbWlzZXMpXG5cdFx0XHRcdC50aGVuKHZhbHVlcyA9PiB7XG5cdFx0XHRcdFx0Y29uc3QgZGF0YSA9IFtdO1xuXHRcdFx0XHRcdGZvciAoY29uc3QgdmFsdWUgb2YgdmFsdWVzKSB7XG5cdFx0XHRcdFx0XHRkYXRhLnB1c2godmFsdWUudmFsdWUpO1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdHJldHVybiBkYXRhO1xuXHRcdFx0XHR9KTtcblx0XHR9XG5cblx0XHRyZXR1cm4gUHJvbWlzZS5yZXNvbHZlKClcblx0XHRcdC50aGVuKCgpID0+IGlzQXJyYXkgPyBzdG9yZS5nZXRNYW55KGtleVByZWZpeGVkKSA6IHN0b3JlLmdldChrZXlQcmVmaXhlZCkpXG5cdFx0XHQudGhlbihkYXRhID0+ICh0eXBlb2YgZGF0YSA9PT0gJ3N0cmluZycpID8gdGhpcy5vcHRzLmRlc2VyaWFsaXplKGRhdGEpIDogKHRoaXMub3B0cy5jb21wcmVzc2lvbiA/IHRoaXMub3B0cy5kZXNlcmlhbGl6ZShkYXRhKSA6IGRhdGEpKVxuXHRcdFx0LnRoZW4oZGF0YSA9PiB7XG5cdFx0XHRcdGlmIChkYXRhID09PSB1bmRlZmluZWQgfHwgZGF0YSA9PT0gbnVsbCkge1xuXHRcdFx0XHRcdHJldHVybiB1bmRlZmluZWQ7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRpZiAoaXNBcnJheSkge1xuXHRcdFx0XHRcdHJldHVybiBkYXRhLm1hcCgocm93LCBpbmRleCkgPT4ge1xuXHRcdFx0XHRcdFx0aWYgKCh0eXBlb2Ygcm93ID09PSAnc3RyaW5nJykpIHtcblx0XHRcdFx0XHRcdFx0cm93ID0gdGhpcy5vcHRzLmRlc2VyaWFsaXplKHJvdyk7XG5cdFx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRcdGlmIChyb3cgPT09IHVuZGVmaW5lZCB8fCByb3cgPT09IG51bGwpIHtcblx0XHRcdFx0XHRcdFx0cmV0dXJuIHVuZGVmaW5lZDtcblx0XHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdFx0aWYgKHR5cGVvZiByb3cuZXhwaXJlcyA9PT0gJ251bWJlcicgJiYgRGF0ZS5ub3coKSA+IHJvdy5leHBpcmVzKSB7XG5cdFx0XHRcdFx0XHRcdHRoaXMuZGVsZXRlKGtleVtpbmRleF0pLnRoZW4oKCkgPT4gdW5kZWZpbmVkKTtcblx0XHRcdFx0XHRcdFx0cmV0dXJuIHVuZGVmaW5lZDtcblx0XHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdFx0cmV0dXJuIChvcHRpb25zICYmIG9wdGlvbnMucmF3KSA/IHJvdyA6IHJvdy52YWx1ZTtcblx0XHRcdFx0XHR9KTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdGlmICh0eXBlb2YgZGF0YS5leHBpcmVzID09PSAnbnVtYmVyJyAmJiBEYXRlLm5vdygpID4gZGF0YS5leHBpcmVzKSB7XG5cdFx0XHRcdFx0cmV0dXJuIHRoaXMuZGVsZXRlKGtleSkudGhlbigoKSA9PiB1bmRlZmluZWQpO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0cmV0dXJuIChvcHRpb25zICYmIG9wdGlvbnMucmF3KSA/IGRhdGEgOiBkYXRhLnZhbHVlO1xuXHRcdFx0fSk7XG5cdH1cblxuXHRzZXQoa2V5LCB2YWx1ZSwgdHRsKSB7XG5cdFx0Y29uc3Qga2V5UHJlZml4ZWQgPSB0aGlzLl9nZXRLZXlQcmVmaXgoa2V5KTtcblx0XHRpZiAodHlwZW9mIHR0bCA9PT0gJ3VuZGVmaW5lZCcpIHtcblx0XHRcdHR0bCA9IHRoaXMub3B0cy50dGw7XG5cdFx0fVxuXG5cdFx0aWYgKHR0bCA9PT0gMCkge1xuXHRcdFx0dHRsID0gdW5kZWZpbmVkO1xuXHRcdH1cblxuXHRcdGNvbnN0IHtzdG9yZX0gPSB0aGlzLm9wdHM7XG5cblx0XHRyZXR1cm4gUHJvbWlzZS5yZXNvbHZlKClcblx0XHRcdC50aGVuKCgpID0+IHtcblx0XHRcdFx0Y29uc3QgZXhwaXJlcyA9ICh0eXBlb2YgdHRsID09PSAnbnVtYmVyJykgPyAoRGF0ZS5ub3coKSArIHR0bCkgOiBudWxsO1xuXHRcdFx0XHRpZiAodHlwZW9mIHZhbHVlID09PSAnc3ltYm9sJykge1xuXHRcdFx0XHRcdHRoaXMuZW1pdCgnZXJyb3InLCAnc3ltYm9sIGNhbm5vdCBiZSBzZXJpYWxpemVkJyk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHR2YWx1ZSA9IHt2YWx1ZSwgZXhwaXJlc307XG5cdFx0XHRcdHJldHVybiB0aGlzLm9wdHMuc2VyaWFsaXplKHZhbHVlKTtcblx0XHRcdH0pXG5cdFx0XHQudGhlbih2YWx1ZSA9PiBzdG9yZS5zZXQoa2V5UHJlZml4ZWQsIHZhbHVlLCB0dGwpKVxuXHRcdFx0LnRoZW4oKCkgPT4gdHJ1ZSk7XG5cdH1cblxuXHRkZWxldGUoa2V5KSB7XG5cdFx0Y29uc3Qge3N0b3JlfSA9IHRoaXMub3B0cztcblx0XHRpZiAoQXJyYXkuaXNBcnJheShrZXkpKSB7XG5cdFx0XHRjb25zdCBrZXlQcmVmaXhlZCA9IHRoaXMuX2dldEtleVByZWZpeEFycmF5KGtleSk7XG5cdFx0XHRpZiAoc3RvcmUuZGVsZXRlTWFueSA9PT0gdW5kZWZpbmVkKSB7XG5cdFx0XHRcdGNvbnN0IHByb21pc2VzID0gW107XG5cdFx0XHRcdGZvciAoY29uc3Qga2V5IG9mIGtleVByZWZpeGVkKSB7XG5cdFx0XHRcdFx0cHJvbWlzZXMucHVzaChzdG9yZS5kZWxldGUoa2V5KSk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRyZXR1cm4gUHJvbWlzZS5hbGxTZXR0bGVkKHByb21pc2VzKVxuXHRcdFx0XHRcdC50aGVuKHZhbHVlcyA9PiB2YWx1ZXMuZXZlcnkoeCA9PiB4LnZhbHVlID09PSB0cnVlKSk7XG5cdFx0XHR9XG5cblx0XHRcdHJldHVybiBQcm9taXNlLnJlc29sdmUoKVxuXHRcdFx0XHQudGhlbigoKSA9PiBzdG9yZS5kZWxldGVNYW55KGtleVByZWZpeGVkKSk7XG5cdFx0fVxuXG5cdFx0Y29uc3Qga2V5UHJlZml4ZWQgPSB0aGlzLl9nZXRLZXlQcmVmaXgoa2V5KTtcblx0XHRyZXR1cm4gUHJvbWlzZS5yZXNvbHZlKClcblx0XHRcdC50aGVuKCgpID0+IHN0b3JlLmRlbGV0ZShrZXlQcmVmaXhlZCkpO1xuXHR9XG5cblx0Y2xlYXIoKSB7XG5cdFx0Y29uc3Qge3N0b3JlfSA9IHRoaXMub3B0cztcblx0XHRyZXR1cm4gUHJvbWlzZS5yZXNvbHZlKClcblx0XHRcdC50aGVuKCgpID0+IHN0b3JlLmNsZWFyKCkpO1xuXHR9XG5cblx0aGFzKGtleSkge1xuXHRcdGNvbnN0IGtleVByZWZpeGVkID0gdGhpcy5fZ2V0S2V5UHJlZml4KGtleSk7XG5cdFx0Y29uc3Qge3N0b3JlfSA9IHRoaXMub3B0cztcblx0XHRyZXR1cm4gUHJvbWlzZS5yZXNvbHZlKClcblx0XHRcdC50aGVuKGFzeW5jICgpID0+IHtcblx0XHRcdFx0aWYgKHR5cGVvZiBzdG9yZS5oYXMgPT09ICdmdW5jdGlvbicpIHtcblx0XHRcdFx0XHRyZXR1cm4gc3RvcmUuaGFzKGtleVByZWZpeGVkKTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdGNvbnN0IHZhbHVlID0gYXdhaXQgc3RvcmUuZ2V0KGtleVByZWZpeGVkKTtcblx0XHRcdFx0cmV0dXJuIHZhbHVlICE9PSB1bmRlZmluZWQ7XG5cdFx0XHR9KTtcblx0fVxuXG5cdGRpc2Nvbm5lY3QoKSB7XG5cdFx0Y29uc3Qge3N0b3JlfSA9IHRoaXMub3B0cztcblx0XHRpZiAodHlwZW9mIHN0b3JlLmRpc2Nvbm5lY3QgPT09ICdmdW5jdGlvbicpIHtcblx0XHRcdHJldHVybiBzdG9yZS5kaXNjb25uZWN0KCk7XG5cdFx0fVxuXHR9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gS2V5djtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/keyv@4.5.4/node_modules/keyv/src/index.js\n");

/***/ })

};
;