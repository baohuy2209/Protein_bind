"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/settings/page",{

/***/ "(app-pages-browser)/./src/components/Header/DarkModeSwitcher.tsx":
/*!****************************************************!*\
  !*** ./src/components/Header/DarkModeSwitcher.tsx ***!
  \****************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/.pnpm/next@14.2.7_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var _hooks_useColorMode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/hooks/useColorMode */ \"(app-pages-browser)/./src/hooks/useColorMode.tsx\");\n\nvar _s = $RefreshSig$();\n\nconst DarkModeSwitcher = ()=>{\n    _s();\n    const [colorMode, setColorMode] = (0,_hooks_useColorMode__WEBPACK_IMPORTED_MODULE_1__[\"default\"])();\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n        className: \"relative m-0 block\",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n            type: \"checkbox\",\n            onChange: ()=>{\n                if (typeof setColorMode === \"function\") {\n                    setColorMode(colorMode === \"light\" ? \"dark\" : \"light\");\n                }\n            },\n            className: \"absolute top-0\"\n        }, void 0, false, {\n            fileName: \"C:\\\\Users\\\\ADMIN\\\\OneDrive\\\\Hình ảnh\\\\Tài li\\xeạu\\\\GitHub\\\\Protein_bind\\\\protein-bind-website\\\\src\\\\components\\\\Header\\\\DarkModeSwitcher.tsx\",\n            lineNumber: 6,\n            columnNumber: 7\n        }, undefined)\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\ADMIN\\\\OneDrive\\\\Hình ảnh\\\\Tài li\\xeạu\\\\GitHub\\\\Protein_bind\\\\protein-bind-website\\\\src\\\\components\\\\Header\\\\DarkModeSwitcher.tsx\",\n        lineNumber: 5,\n        columnNumber: 5\n    }, undefined);\n};\n_s(DarkModeSwitcher, \"Cg19MR8e07Q3SRC3E07ExjOIoZ8=\", false, function() {\n    return [\n        _hooks_useColorMode__WEBPACK_IMPORTED_MODULE_1__[\"default\"]\n    ];\n});\n_c = DarkModeSwitcher;\n/* harmony default export */ __webpack_exports__[\"default\"] = (DarkModeSwitcher);\nvar _c;\n$RefreshReg$(_c, \"DarkModeSwitcher\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9jb21wb25lbnRzL0hlYWRlci9EYXJrTW9kZVN3aXRjaGVyLnRzeCIsIm1hcHBpbmdzIjoiOzs7OztBQUFnRDtBQUNoRCxNQUFNQyxtQkFBbUI7O0lBQ3ZCLE1BQU0sQ0FBQ0MsV0FBV0MsYUFBYSxHQUFHSCwrREFBWUE7SUFDOUMscUJBQ0UsOERBQUNJO1FBQU1DLFdBQVk7a0JBQ2pCLDRFQUFDQztZQUNDQyxNQUFLO1lBQ0xDLFVBQVU7Z0JBQ1IsSUFBSSxPQUFPTCxpQkFBaUIsWUFBWTtvQkFDdENBLGFBQWFELGNBQWMsVUFBVSxTQUFTO2dCQUNoRDtZQUNGO1lBQ0FHLFdBQVU7Ozs7Ozs7Ozs7O0FBSWxCO0dBZk1KOztRQUM4QkQsMkRBQVlBOzs7S0FEMUNDO0FBZ0JOLCtEQUFlQSxnQkFBZ0JBLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL2NvbXBvbmVudHMvSGVhZGVyL0RhcmtNb2RlU3dpdGNoZXIudHN4PzM2OWEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHVzZUNvbG9yTW9kZSBmcm9tIFwiQC9ob29rcy91c2VDb2xvck1vZGVcIjtcclxuY29uc3QgRGFya01vZGVTd2l0Y2hlciA9ICgpID0+IHtcclxuICBjb25zdCBbY29sb3JNb2RlLCBzZXRDb2xvck1vZGVdID0gdXNlQ29sb3JNb2RlKCk7XHJcbiAgcmV0dXJuIChcclxuICAgIDxsYWJlbCBjbGFzc05hbWU9e2ByZWxhdGl2ZSBtLTAgYmxvY2tgfT5cclxuICAgICAgPGlucHV0XHJcbiAgICAgICAgdHlwZT1cImNoZWNrYm94XCJcclxuICAgICAgICBvbkNoYW5nZT17KCkgPT4ge1xyXG4gICAgICAgICAgaWYgKHR5cGVvZiBzZXRDb2xvck1vZGUgPT09IFwiZnVuY3Rpb25cIikge1xyXG4gICAgICAgICAgICBzZXRDb2xvck1vZGUoY29sb3JNb2RlID09PSBcImxpZ2h0XCIgPyBcImRhcmtcIiA6IFwibGlnaHRcIik7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfX1cclxuICAgICAgICBjbGFzc05hbWU9XCJhYnNvbHV0ZSB0b3AtMFwiXHJcbiAgICAgIC8+XHJcbiAgICA8L2xhYmVsPlxyXG4gICk7XHJcbn07XHJcbmV4cG9ydCBkZWZhdWx0IERhcmtNb2RlU3dpdGNoZXI7XHJcbiJdLCJuYW1lcyI6WyJ1c2VDb2xvck1vZGUiLCJEYXJrTW9kZVN3aXRjaGVyIiwiY29sb3JNb2RlIiwic2V0Q29sb3JNb2RlIiwibGFiZWwiLCJjbGFzc05hbWUiLCJpbnB1dCIsInR5cGUiLCJvbkNoYW5nZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/Header/DarkModeSwitcher.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/hooks/useColorMode.tsx":
/*!************************************!*\
  !*** ./src/hooks/useColorMode.tsx ***!
  \************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/.pnpm/next@14.2.7_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _useLocalStorage__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./useLocalStorage */ \"(app-pages-browser)/./src/hooks/useLocalStorage.tsx\");\nvar _s = $RefreshSig$();\n\n\nconst useColorMode = ()=>{\n    _s();\n    const [colorMode, setColorMode] = (0,_useLocalStorage__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(\"color-theme\", \"light\");\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        const className = \"dark\";\n        const bodyClass = window.document.body.classList;\n        colorMode === \"dark\" ? bodyClass.add(className) : bodyClass.remove(className);\n    }, [\n        colorMode\n    ]);\n    return [\n        colorMode,\n        setColorMode\n    ];\n};\n_s(useColorMode, \"nfcEHN4gLknmEYOfpU/tbfAL/mU=\", false, function() {\n    return [\n        _useLocalStorage__WEBPACK_IMPORTED_MODULE_1__[\"default\"]\n    ];\n});\n/* harmony default export */ __webpack_exports__[\"default\"] = (useColorMode);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9ob29rcy91c2VDb2xvck1vZGUudHN4IiwibWFwcGluZ3MiOiI7Ozs7O0FBQWtDO0FBQ2M7QUFDaEQsTUFBTUUsZUFBZTs7SUFDbkIsTUFBTSxDQUFDQyxXQUFXQyxhQUFhLEdBQUdILDREQUFlQSxDQUFDLGVBQWU7SUFDakVELGdEQUFTQSxDQUFDO1FBQ1IsTUFBTUssWUFBWTtRQUNsQixNQUFNQyxZQUFZQyxPQUFPQyxRQUFRLENBQUNDLElBQUksQ0FBQ0MsU0FBUztRQUVoRFAsY0FBYyxTQUNWRyxVQUFVSyxHQUFHLENBQUNOLGFBQ2RDLFVBQVVNLE1BQU0sQ0FBQ1A7SUFDdkIsR0FBRztRQUFDRjtLQUFVO0lBQ2QsT0FBTztRQUFDQTtRQUFXQztLQUFhO0FBQ2xDO0dBWE1GOztRQUM4QkQsd0RBQWVBOzs7QUFXbkQsK0RBQWVDLFlBQVlBLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL2hvb2tzL3VzZUNvbG9yTW9kZS50c3g/NGQzNCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VFZmZlY3QgfSBmcm9tIFwicmVhY3RcIjtcclxuaW1wb3J0IHVzZUxvY2FsU3RvcmFnZSBmcm9tIFwiLi91c2VMb2NhbFN0b3JhZ2VcIjtcclxuY29uc3QgdXNlQ29sb3JNb2RlID0gKCkgPT4ge1xyXG4gIGNvbnN0IFtjb2xvck1vZGUsIHNldENvbG9yTW9kZV0gPSB1c2VMb2NhbFN0b3JhZ2UoXCJjb2xvci10aGVtZVwiLCBcImxpZ2h0XCIpO1xyXG4gIHVzZUVmZmVjdCgoKSA9PiB7XHJcbiAgICBjb25zdCBjbGFzc05hbWUgPSBcImRhcmtcIjtcclxuICAgIGNvbnN0IGJvZHlDbGFzcyA9IHdpbmRvdy5kb2N1bWVudC5ib2R5LmNsYXNzTGlzdDtcclxuXHJcbiAgICBjb2xvck1vZGUgPT09IFwiZGFya1wiXHJcbiAgICAgID8gYm9keUNsYXNzLmFkZChjbGFzc05hbWUpXHJcbiAgICAgIDogYm9keUNsYXNzLnJlbW92ZShjbGFzc05hbWUpO1xyXG4gIH0sIFtjb2xvck1vZGVdKTtcclxuICByZXR1cm4gW2NvbG9yTW9kZSwgc2V0Q29sb3JNb2RlXTtcclxufTtcclxuZXhwb3J0IGRlZmF1bHQgdXNlQ29sb3JNb2RlO1xyXG4iXSwibmFtZXMiOlsidXNlRWZmZWN0IiwidXNlTG9jYWxTdG9yYWdlIiwidXNlQ29sb3JNb2RlIiwiY29sb3JNb2RlIiwic2V0Q29sb3JNb2RlIiwiY2xhc3NOYW1lIiwiYm9keUNsYXNzIiwid2luZG93IiwiZG9jdW1lbnQiLCJib2R5IiwiY2xhc3NMaXN0IiwiYWRkIiwicmVtb3ZlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/hooks/useColorMode.tsx\n"));

/***/ })

});